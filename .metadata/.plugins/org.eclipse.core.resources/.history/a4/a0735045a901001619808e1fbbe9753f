package manager;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

import model.Book;
import model.Category;
import model.User;

public class DBManager {

	public User getLoggedUser(EntityManager em, String username, String password){
			TypedQuery<User> tq = em.createQuery("select u from User u where u.username= :username and u.password= :password", User.class);
			tq.setParameter("username", username);
			tq.setParameter("password", password);
			User loggedUser = tq.getSingleResult();
			return loggedUser;
    }
	
	// SAVE -------------------------------------------------------------------

		public boolean saveUser(EntityManager em, User user) {
			try {
				em.getTransaction().begin();
				em.persist(user);
				em.getTransaction().commit();
				return true;
			} catch (Exception e) {
				e.printStackTrace();
				return false;
			}
		}
		
		public boolean saveBook(EntityManager em, Book book) {
			try {
				em.getTransaction().begin();
				em.persist(book);
				em.getTransaction().commit();
				return true;
			} catch (Exception e) {
				e.printStackTrace();
				return false;
			}
		}
		
	// GET  ----------------------------------------------------------------

		public List<Book> getAllBooks(EntityManager em) {
			TypedQuery<Book> tq = em.createQuery("select b from Book b", Book.class);
			List<Book> books = tq.getResultList();
			return books;
		}

		public List<Category> getAllCategories(EntityManager em) {
			TypedQuery<Category> tq = em.createQuery("select c from Category c", Category.class);
			List<Category> categories = tq.getResultList();
			return categories;
		}

		public List<Book> getBooksForCategories(EntityManager em, List<String> selectedCategories) {
			TypedQuery<Book> tqq = em.createQuery("select b from Book b where b.title = :title", Book.class);
			tqq.setParameter("title", "Trees");
			Book trees = tqq.getSingleResult();
			TypedQuery<Category> ccc = em.createQuery("select c from Category c where c.name = :name", Category.class);
			ccc.setParameter("name", "Drama");
			List<Category> cccc = ccc.getResultList();
			trees.setCategories(cccc);
			System.out.println("Knjiga"+ trees.getTitle() + "cat" + cccc.get(0));
			System.out.println("Caaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaat");
			List<Category> cats = null;
			List<Book> books = null;
			for(String c: selectedCategories){
				int id = Integer.parseInt(c);
				TypedQuery<Category> tq = em.createQuery("select c from Category c where c.categoryId = :id", Category.class);
				tq.setParameter("id", id);
				Category cat = tq.getSingleResult();
				System.out.println(cat);
				TypedQuery<Book> tq1 = em.createQuery("select b from Book b where :cat in b.categories", Book.class);
				tq1.setParameter("cat", cat);
				books.addAll(tq1.getResultList());
			}
			for(Book b:books)
				System.out.println(b.getTitle());
			return books;
		}

		
}
