package beans;

import java.text.ParseException;
import java.util.Date;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ManagedProperty;
import javax.faces.bean.RequestScoped;
import javax.faces.context.FacesContext;
import javax.persistence.EntityManager;

import manager.DBManager;
import manager.JPAUtil;
import model.Response;
import model.Topic;

@ManagedBean
@RequestScoped
public class TopicManagedBean {
	
	@ManagedProperty(value="#{loginManagedBean}")
	private LoginManagedBean lmb;

	private Topic topic = new Topic();
	private Response response = new Response();
	private List<Topic> topics;
	private List<Response> responses;
	EntityManager em = JPAUtil.getEntityManager();
	
	public TopicManagedBean() {
		setTopics(new DBManager().getAllTopics(em));
		setResponses(new DBManager().getAllResponses(em));
	}
	
	public String addTopic() throws ParseException {
		topic.setUser(lmb.getCurrentUser());
		boolean ok = new DBManager().saveTopic(em,topic);
		if (ok) {
			FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO,
					"Uspesno!", null);
			FacesContext.getCurrentInstance().addMessage(null, message);
		} else {
			FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO,
					"Neuspesno!", null);
			FacesContext.getCurrentInstance().addMessage(null, message);
		}
		return "";
	}
	
	public String addResponse(Topic t){
		response.setTopic(t);
		response.setUser(lmb.getCurrentUser());
		boolean ok = new DBManager().saveResponse(em,response);
		if (ok) {
			FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO,
					"Uspesno!", null);
			FacesContext.getCurrentInstance().addMessage(null, message);
		} else {
			FacesMessage message = new FacesMessage(FacesMessage.SEVERITY_INFO,
					"Neuspesno!", null);
			FacesContext.getCurrentInstance().addMessage(null, message);
		}
		return "";
	}

	public LoginManagedBean getLmb() {
		return lmb;
	}

	public void setLmb(LoginManagedBean lmb) {
		this.lmb = lmb;
	}

	public Topic getTopic() {
		return topic;
	}

	public void setTopic(Topic topic) {
		this.topic = topic;
	}

	public List<Topic> getTopics() {
		return topics;
	}

	public void setTopics(List<Topic> topics) {
		this.topics = topics;
	}

	public Response getResponse() {
		return response;
	}

	public void setResponse(Response response) {
		this.response = response;
	}

	public List<Response> getResponses() {
		return responses;
	}

	public void setResponses(List<Response> responses) {
		this.responses = responses;
	}
}
